#!/bin/fish

# --- SOURCED FILES ---

function banner
	source ../source/banner
end

function menu
	source ../source/menu $argv
end

# --- VARIABLES ---

set installed_files
set not_installed_files

# --- FUNCTIONS ---

function create_file_list

	set installed_files (jq -rc '.files[] | select(.installed == true) | .name' files.json)
	set not_installed_files (jq -rc '.files [] | select(.installed == false) | .name' files.json)

end

function show_installed

		set_color yellow
		echo '--- INSTALLED ---'
		set_color green

		for var in $installed_files
			echo $var
		end

		set_color yellow
		echo '--- NOT INSTALLED ---'
		set_color red

		for var in $not_installed_files
			echo $var
		end

		set_color normal
		echo '---------------------'
end

function install_file

	set target $lastmenu[$mswitch]
	echo 'Target: '$target
	cp files.json temp.json
	jq '.files[] | select(.name == "'$target'").installed |= trueâ€™ > temp.json
	mv temp.json files.json
#	rm temp.json
	create_file_list

end

function cb
#	clear
#	banner
end

# --- CODE ---


cb


# initialize file list
create_file_list

set_color yellow

echo 'WELCOME TO THE KIND-OF INTERACTIVE FILE INSTALLER!'

set_color normal
echo 'What would you like to do?'

while true

	menu 'See managed scripts' 'Add script to installer' 'Update scripts'

	echo \n

	switch $mswitch

		case 1
		cb
			while true
			cb
			show_installed
			menu 'INSTALL' 'UNINSTALL'
			switch $mswitch

			case 1
			cb
				set_color yellow
				echo 'Select a script to install'
				set_color normal

				menu $not_installed_files 'ALL'

				if string match -ri '\D' $mswitch
					echo 'not a digit'
				else if test $mswitch -eq 0
					echo 'Option 0 is not available'
					read
				else if test $mswitch -le (math (count $lastmenu)-1)
					echo 'if worked'
					echo $lastmenu[$mswitch]
					install_file
				else if test $mswitch -eq (math (count $lastmenu))
					echo 'ALL'
					read
				end
			case 2
			cb
				echo 'uninstall'
				menu $not_installed_files
			case '*'
			cb
				break
			end
			end
		case 2
		cb
			update_scripts
		case '*'
		cb
			echo 'THANK YOU FOR TRUSTING IN THORNEHILL'
			break

	end

end
